spring.application.name=stackoverflow

management.endpoints.web.exposure.include=*
management.endpoint.mappings.enabled=true
management.endpoint.health.show-details=always

spring.data.elasticsearch.repositories.enabled=true
spring.data.elasticsearch.cluster-nodes=localhost:9300
spring.data.elasticsearch.cluster-name=docker-cluster

spring.jackson.serialization.write_dates_as_timestamps=false

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.properties.spring.json.add.type.headers=false

spring.cloud.stream.kafka.binder.autoCreateTopics: false
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms: 1000
# See https://github.com/spring-cloud/spring-cloud-stream-samples/issues/149
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde

spring.cloud.stream.function.definition: producer;processor;consumer;concatHash;concatStar;process

spring.cloud.stream.bindings.processor-in-0.destination: first
spring.cloud.stream.bindings.processor-out-0.destination: second
spring.cloud.stream.bindings.consumer-in-0.destination: second

spring.cloud.stream.bindings.process-in-0.destination=words
spring.cloud.stream.bindings.process-out-0.destination=counts
